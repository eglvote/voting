{
  "contractName": "EglToken",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function",
      "constant": true
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialRecipient",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "initialSupply",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cap\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialRecipient\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"initialSupply\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"cap()\":{\"details\":\"Returns the cap on the token's total supply.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`.\"}}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/Users/svancoller/Development/bloXroute/egl/contracts/EglToken.sol\":\"EglToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"/Users/svancoller/Development/bloXroute/egl/contracts/EglToken.sol\":{\"keccak256\":\"0x74c77e77a1d9fe905b5b72eef12f388753f3865930f103b65ef47f9e2023c95c\",\"urls\":[\"bzz-raw://b8dbe3e9940fa47b9c5e22944fe4987f52680bc3aaa1679d36a230be1bc41a50\",\"dweb:/ipfs/QmT3ArxHNU4YyoWhsSyQ2hp7imFbr4eUkh4e2hnJgKVWE5\"]},\"@openzeppelin/contracts-upgradeable/GSN/ContextUpgradeable.sol\":{\"keccak256\":\"0xbbf8a21b9a66c48d45ff771b8563c6df19ba451d63dfb8380a865c1e1f29d1a0\",\"urls\":[\"bzz-raw://062688aac76e27ab50157a9d645700cf92e3c0d51d3d860be1d2e1a0c04a87d0\",\"dweb:/ipfs/QmfXxppWAiSTeH8YNn2EtMPDgzrLeJ5rjRq8knEbje88mX\"]},\"@openzeppelin/contracts-upgradeable/math/SafeMathUpgradeable.sol\":{\"keccak256\":\"0xe9ecc18d06bcc5aa48c40a98333540248b6c1c18ecb6262329c06d3f0cbb45ae\",\"urls\":[\"bzz-raw://8a81bcbe4f867a4eaf7ec375508a9901ea7517b9854c9a542c242050beda5127\",\"dweb:/ipfs/QmS499VRDhAgMg1pK96PiyRpP3gJZzzMcoNBbe8AV3JNw3\"]},\"@openzeppelin/contracts-upgradeable/proxy/Initializable.sol\":{\"keccak256\":\"0xae7044b7c89ed74327b0979ae6f317c65d87b8d17a42d0c62d698d77d5de5511\",\"urls\":[\"bzz-raw://d676c978d8ecee5c4510f045b747d94f3a1381e39feb870d2675d5b6d45a371b\",\"dweb:/ipfs/QmUAokuHWPVAf14QkhPtSdYFyNa8HVje9CBEzwCcxH3xkP\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20CappedUpgradeable.sol\":{\"keccak256\":\"0x8e3f0b92b560b98001702954b242040ab0bc73132b00c5ba77afaf49a502ad51\",\"urls\":[\"bzz-raw://4fa52a5e6edfae3aa44d3276abf207c48c12235f081b2d3701445bc4474bac8f\",\"dweb:/ipfs/QmX8Vbf4Wc5G7LtkyGEAnNe3V3Q9mpmhrwZNAADnbtCdEG\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20Upgradeable.sol\":{\"keccak256\":\"0x9e71cf53c2ee5c9e4f183e168028fc208560493aaf48668bca0981bb2c8359c2\",\"urls\":[\"bzz-raw://7cb9d29f7bc76b077649ccef2043e1492a462afcb2410f443e63233f206a95dd\",\"dweb:/ipfs/QmRDXEro4hh2E6rTUAWvBkHzivAS1TBmtSLP1mRGAHVnnL\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0xa1931c47a617014f858580db625aa0dcf343796f39acd4b5b51effc092a1f0a9\",\"urls\":[\"bzz-raw://2cbeb499bad52667b96dd7df8e9b1f583e8c07afaba0018a75e5b7ff6e777173\",\"dweb:/ipfs/QmPLJnuhEcWnpmhMHKsiuVHVxMwb5k6idYyjajbrtZLz5B\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061122f806100206000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b41146103aa578063a457c2d7146103b2578063a9059cbb146103de578063dd62ed3e1461040a576100df565b806339509351146102175780634d12d4b61461024357806370a0823114610384576100df565b806323b872dd116100bd57806323b872dd146101bb578063313ce567146101f1578063355274ea1461020f576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101a1575b600080fd5b6100ec610438565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61018d6004803603604081101561017757600080fd5b506001600160a01b0381351690602001356104cf565b604080519115158252519081900360200190f35b6101a96104ec565b60408051918252519081900360200190f35b61018d600480360360608110156101d157600080fd5b506001600160a01b038135811691602081013590911690604001356104f2565b6101f961057f565b6040805160ff9092168252519081900360200190f35b6101a9610588565b61018d6004803603604081101561022d57600080fd5b506001600160a01b03813516906020013561058e565b6103826004803603608081101561025957600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561028457600080fd5b82018360208201111561029657600080fd5b803590602001918460018302840111640100000000831117156102b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561030b57600080fd5b82018360208201111561031d57600080fd5b8035906020019184600183028401116401000000008311171561033f57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506105e2915050565b005b6101a96004803603602081101561039a57600080fd5b50356001600160a01b0316610700565b6100ec61071b565b61018d600480360360408110156103c857600080fd5b506001600160a01b03813516906020013561077c565b61018d600480360360408110156103f457600080fd5b506001600160a01b0381351690602001356107ea565b6101a96004803603604081101561042057600080fd5b506001600160a01b03813581169160200135166107fe565b60368054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104c45780601f10610499576101008083540402835291602001916104c4565b820191906000526020600020905b8154815290600101906020018083116104a757829003601f168201915b505050505090505b90565b60006104e36104dc610829565b848461082d565b50600192915050565b60355490565b60006104ff848484610919565b6105758461050b610829565b61057085604051806060016040528060288152602001611164602891396001600160a01b038a16600090815260346020526040812090610549610829565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610a8216565b61082d565b5060019392505050565b60385460ff1690565b60655490565b60006104e361059b610829565b8461057085603460006105ac610829565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b1916565b600054610100900460ff16806105fb57506105fb610b7a565b80610609575060005460ff16155b6106445760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff1615801561066f576000805460ff1961ff0019909116610100171660011790555b6001600160a01b0385166106ca576040805162461bcd60e51b815260206004820152601a60248201527f45474c544f4b454e3a494e56414c49445f524543495049454e54000000000000604482015290519081900360640190fd5b6106d48484610b80565b6106dd82610c36565b6106e78583610d33565b80156106f9576000805461ff00191690555b5050505050565b6001600160a01b031660009081526033602052604090205490565b60378054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104c45780601f10610499576101008083540402835291602001916104c4565b60006104e3610789610829565b84610570856040518060600160405280602581526020016111d560259139603460006107b3610829565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a8216565b60006104e36107f7610829565b8484610919565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166108725760405162461bcd60e51b81526004018080602001828103825260248152602001806111b16024913960400191505060405180910390fd5b6001600160a01b0382166108b75760405162461bcd60e51b81526004018080602001828103825260228152602001806110ee6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661095e5760405162461bcd60e51b815260040180806020018281038252602581526020018061118c6025913960400191505060405180910390fd5b6001600160a01b0382166109a35760405162461bcd60e51b81526004018080602001828103825260238152602001806110cb6023913960400191505060405180910390fd5b6109ae838383610e31565b6109f181604051806060016040528060268152602001611110602691396001600160a01b038616600090815260336020526040902054919063ffffffff610a8216565b6001600160a01b038085166000908152603360205260408082209390935590841681522054610a26908263ffffffff610b1916565b6001600160a01b0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b115760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ad6578181015183820152602001610abe565b50505050905090810190601f168015610b035780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b73576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b303b1590565b600054610100900460ff1680610b995750610b99610b7a565b80610ba7575060005460ff16155b610be25760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff16158015610c0d576000805460ff1961ff0019909116610100171660011790555b610c15610eb8565b610c1f8383610f5a565b8015610c31576000805461ff00191690555b505050565b600054610100900460ff1680610c4f5750610c4f610b7a565b80610c5d575060005460ff16155b610c985760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff16158015610cc3576000805460ff1961ff0019909116610100171660011790555b60008211610d18576040805162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a2063617020697320300000000000000000000000604482015290519081900360640190fd5b60658290558015610d2f576000805461ff00191690555b5050565b6001600160a01b038216610d8e576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610d9a60008383610e31565b603554610dad908263ffffffff610b1916565b6035556001600160a01b038216600090815260336020526040902054610dd9908263ffffffff610b1916565b6001600160a01b03831660008181526033602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610e3c838383610c31565b6001600160a01b038316610c3157606554610e6582610e596104ec565b9063ffffffff610b1916565b1115610c31576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b600054610100900460ff1680610ed15750610ed1610b7a565b80610edf575060005460ff16155b610f1a5760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff16158015610f45576000805460ff1961ff0019909116610100171660011790555b8015610f57576000805461ff00191690555b50565b600054610100900460ff1680610f735750610f73610b7a565b80610f81575060005460ff16155b610fbc5760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff16158015610fe7576000805460ff1961ff0019909116610100171660011790555b8251610ffa906036906020860190611032565b50815161100e906037906020850190611032565b506038805460ff191660121790558015610c31576000805461ff0019169055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061107357805160ff19168380011785556110a0565b828001600101855582156110a0579182015b828111156110a0578251825591602001919060010190611085565b506110ac9291506110b0565b5090565b6104cc91905b808211156110ac57600081556001016110b656fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c1bae8b5898f31a4babf37ef720d8b725d411da787313f33543549f9d91c6f9064736f6c63430006060033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c8063395093511161008c57806395d89b411161006657806395d89b41146103aa578063a457c2d7146103b2578063a9059cbb146103de578063dd62ed3e1461040a576100df565b806339509351146102175780634d12d4b61461024357806370a0823114610384576100df565b806323b872dd116100bd57806323b872dd146101bb578063313ce567146101f1578063355274ea1461020f576100df565b806306fdde03146100e4578063095ea7b31461016157806318160ddd146101a1575b600080fd5b6100ec610438565b6040805160208082528351818301528351919283929083019185019080838360005b8381101561012657818101518382015260200161010e565b50505050905090810190601f1680156101535780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b61018d6004803603604081101561017757600080fd5b506001600160a01b0381351690602001356104cf565b604080519115158252519081900360200190f35b6101a96104ec565b60408051918252519081900360200190f35b61018d600480360360608110156101d157600080fd5b506001600160a01b038135811691602081013590911690604001356104f2565b6101f961057f565b6040805160ff9092168252519081900360200190f35b6101a9610588565b61018d6004803603604081101561022d57600080fd5b506001600160a01b03813516906020013561058e565b6103826004803603608081101561025957600080fd5b6001600160a01b03823516919081019060408101602082013564010000000081111561028457600080fd5b82018360208201111561029657600080fd5b803590602001918460018302840111640100000000831117156102b857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250929594936020810193503591505064010000000081111561030b57600080fd5b82018360208201111561031d57600080fd5b8035906020019184600183028401116401000000008311171561033f57600080fd5b91908080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525092955050913592506105e2915050565b005b6101a96004803603602081101561039a57600080fd5b50356001600160a01b0316610700565b6100ec61071b565b61018d600480360360408110156103c857600080fd5b506001600160a01b03813516906020013561077c565b61018d600480360360408110156103f457600080fd5b506001600160a01b0381351690602001356107ea565b6101a96004803603604081101561042057600080fd5b506001600160a01b03813581169160200135166107fe565b60368054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104c45780601f10610499576101008083540402835291602001916104c4565b820191906000526020600020905b8154815290600101906020018083116104a757829003601f168201915b505050505090505b90565b60006104e36104dc610829565b848461082d565b50600192915050565b60355490565b60006104ff848484610919565b6105758461050b610829565b61057085604051806060016040528060288152602001611164602891396001600160a01b038a16600090815260346020526040812090610549610829565b6001600160a01b03168152602081019190915260400160002054919063ffffffff610a8216565b61082d565b5060019392505050565b60385460ff1690565b60655490565b60006104e361059b610829565b8461057085603460006105ac610829565b6001600160a01b03908116825260208083019390935260409182016000908120918c16815292529020549063ffffffff610b1916565b600054610100900460ff16806105fb57506105fb610b7a565b80610609575060005460ff16155b6106445760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff1615801561066f576000805460ff1961ff0019909116610100171660011790555b6001600160a01b0385166106ca576040805162461bcd60e51b815260206004820152601a60248201527f45474c544f4b454e3a494e56414c49445f524543495049454e54000000000000604482015290519081900360640190fd5b6106d48484610b80565b6106dd82610c36565b6106e78583610d33565b80156106f9576000805461ff00191690555b5050505050565b6001600160a01b031660009081526033602052604090205490565b60378054604080516020601f60026000196101006001881615020190951694909404938401819004810282018101909252828152606093909290918301828280156104c45780601f10610499576101008083540402835291602001916104c4565b60006104e3610789610829565b84610570856040518060600160405280602581526020016111d560259139603460006107b3610829565b6001600160a01b03908116825260208083019390935260409182016000908120918d1681529252902054919063ffffffff610a8216565b60006104e36107f7610829565b8484610919565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b3390565b6001600160a01b0383166108725760405162461bcd60e51b81526004018080602001828103825260248152602001806111b16024913960400191505060405180910390fd5b6001600160a01b0382166108b75760405162461bcd60e51b81526004018080602001828103825260228152602001806110ee6022913960400191505060405180910390fd5b6001600160a01b03808416600081815260346020908152604080832094871680845294825291829020859055815185815291517f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b9259281900390910190a3505050565b6001600160a01b03831661095e5760405162461bcd60e51b815260040180806020018281038252602581526020018061118c6025913960400191505060405180910390fd5b6001600160a01b0382166109a35760405162461bcd60e51b81526004018080602001828103825260238152602001806110cb6023913960400191505060405180910390fd5b6109ae838383610e31565b6109f181604051806060016040528060268152602001611110602691396001600160a01b038616600090815260336020526040902054919063ffffffff610a8216565b6001600160a01b038085166000908152603360205260408082209390935590841681522054610a26908263ffffffff610b1916565b6001600160a01b0380841660008181526033602090815260409182902094909455805185815290519193928716927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef92918290030190a3505050565b60008184841115610b115760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b83811015610ad6578181015183820152602001610abe565b50505050905090810190601f168015610b035780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b600082820183811015610b73576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b9392505050565b303b1590565b600054610100900460ff1680610b995750610b99610b7a565b80610ba7575060005460ff16155b610be25760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff16158015610c0d576000805460ff1961ff0019909116610100171660011790555b610c15610eb8565b610c1f8383610f5a565b8015610c31576000805461ff00191690555b505050565b600054610100900460ff1680610c4f5750610c4f610b7a565b80610c5d575060005460ff16155b610c985760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff16158015610cc3576000805460ff1961ff0019909116610100171660011790555b60008211610d18576040805162461bcd60e51b815260206004820152601560248201527f45524332304361707065643a2063617020697320300000000000000000000000604482015290519081900360640190fd5b60658290558015610d2f576000805461ff00191690555b5050565b6001600160a01b038216610d8e576040805162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015290519081900360640190fd5b610d9a60008383610e31565b603554610dad908263ffffffff610b1916565b6035556001600160a01b038216600090815260336020526040902054610dd9908263ffffffff610b1916565b6001600160a01b03831660008181526033602090815260408083209490945583518581529351929391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a35050565b610e3c838383610c31565b6001600160a01b038316610c3157606554610e6582610e596104ec565b9063ffffffff610b1916565b1115610c31576040805162461bcd60e51b815260206004820152601960248201527f45524332304361707065643a2063617020657863656564656400000000000000604482015290519081900360640190fd5b600054610100900460ff1680610ed15750610ed1610b7a565b80610edf575060005460ff16155b610f1a5760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff16158015610f45576000805460ff1961ff0019909116610100171660011790555b8015610f57576000805461ff00191690555b50565b600054610100900460ff1680610f735750610f73610b7a565b80610f81575060005460ff16155b610fbc5760405162461bcd60e51b815260040180806020018281038252602e815260200180611136602e913960400191505060405180910390fd5b600054610100900460ff16158015610fe7576000805460ff1961ff0019909116610100171660011790555b8251610ffa906036906020860190611032565b50815161100e906037906020850190611032565b506038805460ff191660121790558015610c31576000805461ff0019169055505050565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f1061107357805160ff19168380011785556110a0565b828001600101855582156110a0579182015b828111156110a0578251825591602001919060010190611085565b506110ac9291506110b0565b5090565b6104cc91905b808211156110ac57600081556001016110b656fe45524332303a207472616e7366657220746f20746865207a65726f206164647265737345524332303a20617070726f766520746f20746865207a65726f206164647265737345524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365496e697469616c697a61626c653a20636f6e747261637420697320616c726561647920696e697469616c697a656445524332303a207472616e7366657220616d6f756e74206578636565647320616c6c6f77616e636545524332303a207472616e736665722066726f6d20746865207a65726f206164647265737345524332303a20617070726f76652066726f6d20746865207a65726f206164647265737345524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726fa2646970667358221220c1bae8b5898f31a4babf37ef720d8b725d411da787313f33543549f9d91c6f9064736f6c63430006060033",
  "immutableReferences": {},
  "sourceMap": "110:506:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;110:506:1;;;;;;;",
  "deployedSourceMap": "110:506:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;110:506:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;2515:81:14;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;2515:81:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4551:166;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4551:166:14;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3558:98;;;:::i;:::-;;;;;;;;;;;;;;;;5184:317;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5184:317:14;;;;;;;;;;;;;;;;;:::i;3417:81::-;;;:::i;:::-;;;;;;;;;;;;;;;;;;;893:73:13;;;:::i;5896:215:14:-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;5896:215:14;;;;;;;;:::i;195:419:1:-;;;;;;15:3:-1;10;7:12;4:2;;;32:1;29;22:12;4:2;-1:-1;;;;;195:419:1;;;;;;;;;;;;;;;27:11:-1;11:28;;8:2;;;52:1;49;42:12;8:2;195:419:1;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;195:419:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;195:419:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;195:419:1;;;;;;;;-1:-1:-1;195:419:1;;-1:-1:-1;;27:11;11:28;;8:2;;;52:1;49;42:12;8:2;195:419:1;;41:9:-1;34:4;18:14;14:25;11:40;8:2;;;64:1;61;54:12;8:2;195:419:1;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;195:419:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;81:16;;74:27;;;;-1:-1;195:419:1;;-1:-1:-1;;195:419:1;;;-1:-1:-1;195:419:1;;-1:-1:-1;;195:419:1:i;:::-;;3714:117:14;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;3714:117:14;-1:-1:-1;;;;;3714:117:14;;:::i;2709:85::-;;;:::i;6598:266::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;6598:266:14;;;;;;;;:::i;4034:172::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4034:172:14;;;;;;;;:::i;4264:149::-;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;-1:-1;;;;;;4264:149:14;;;;;;;;;;:::i;2515:81::-;2584:5;2577:12;;;;;;;;-1:-1:-1;;2577:12:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2552:13;;2577:12;;2584:5;;2577:12;;2584:5;2577:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2515:81;;:::o;4551:166::-;4634:4;4650:39;4659:12;:10;:12::i;:::-;4673:7;4682:6;4650:8;:39::i;:::-;-1:-1:-1;4706:4:14;4551:166;;;;:::o;3558:98::-;3637:12;;3558:98;:::o;5184:317::-;5290:4;5306:36;5316:6;5324:9;5335:6;5306:9;:36::i;:::-;5352:121;5361:6;5369:12;:10;:12::i;:::-;5383:89;5421:6;5383:89;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5383:19:14;;;;;;:11;:19;;;;;;5403:12;:10;:12::i;:::-;-1:-1:-1;;;;;5383:33:14;;;;;;;;;;;;-1:-1:-1;5383:33:14;;;:89;;:37;:89;:::i;:::-;5352:8;:121::i;:::-;-1:-1:-1;5490:4:14;5184:317;;;;;:::o;3417:81::-;3482:9;;;;3417:81;:::o;893:73:13:-;955:4;;893:73;:::o;5896:215:14:-;5984:4;6000:83;6009:12;:10;:12::i;:::-;6023:7;6032:50;6071:10;6032:11;:25;6044:12;:10;:12::i;:::-;-1:-1:-1;;;;;6032:25:14;;;;;;;;;;;;;;;;;-1:-1:-1;6032:25:14;;;:34;;;;;;;;;;;:50;:38;:50;:::i;195:419:1:-;1472:13:12;;;;;;;;:33;;;1489:16;:14;:16::i;:::-;1472:50;;;-1:-1:-1;1510:12:12;;;;1509:13;1472:50;1464:109;;;;-1:-1:-1;;;1464:109:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:19;1607:13;;;;;;1606:14;1630:98;;;;1664:13;:20;;-1:-1:-1;;;;1664:20:12;;;;;1698:19;1680:4;1698:19;;;1630:98;-1:-1:-1;;;;;407:30:1;::::1;399:69;;;::::0;;-1:-1:-1;;;399:69:1;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;479:26;492:4;498:6;479:12;:26::i;:::-;515:43;544:13;515:28;:43::i;:::-;569:38;575:16;593:13;569:5;:38::i;:::-;1754:14:12::0;1750:66;;;1800:5;1784:21;;-1:-1:-1;;1784:21:12;;;1750:66;195:419:1;;;;;:::o;3714:117:14:-;-1:-1:-1;;;;;3806:18:14;3780:7;3806:18;;;:9;:18;;;;;;;3714:117::o;2709:85::-;2780:7;2773:14;;;;;;;;-1:-1:-1;;2773:14:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2748:13;;2773:14;;2780:7;;2773:14;;2780:7;2773:14;;;;;;;;;;;;;;;;;;;;;;;;6598:266;6691:4;6707:129;6716:12;:10;:12::i;:::-;6730:7;6739:96;6778:15;6739:96;;;;;;;;;;;;;;;;;:11;:25;6751:12;:10;:12::i;:::-;-1:-1:-1;;;;;6739:25:14;;;;;;;;;;;;;;;;;-1:-1:-1;6739:25:14;;;:34;;;;;;;;;;;:96;;:38;:96;:::i;4034:172::-;4120:4;4136:42;4146:12;:10;:12::i;:::-;4160:9;4171:6;4136:9;:42::i;4264:149::-;-1:-1:-1;;;;;4379:18:14;;;4353:7;4379:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4264:149::o;828:104:8:-;915:10;828:104;:::o;9662:340:14:-;-1:-1:-1;;;;;9763:19:14;;9755:68;;;;-1:-1:-1;;;9755:68:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9841:21:14;;9833:68;;;;-1:-1:-1;;;9833:68:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9912:18:14;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;9963:32;;;;;;;;;;;;;;;;;9662:340;;;:::o;7338:530::-;-1:-1:-1;;;;;7443:20:14;;7435:70;;;;-1:-1:-1;;;7435:70:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7523:23:14;;7515:71;;;;-1:-1:-1;;;7515:71:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7597:47;7618:6;7626:9;7637:6;7597:20;:47::i;:::-;7675:71;7697:6;7675:71;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;7675:17:14;;;;;;:9;:17;;;;;;;:71;;:21;:71;:::i;:::-;-1:-1:-1;;;;;7655:17:14;;;;;;;:9;:17;;;;;;:91;;;;7779:20;;;;;;;:32;;7804:6;7779:32;:24;:32;:::i;:::-;-1:-1:-1;;;;;7756:20:14;;;;;;;:9;:20;;;;;;;;;:55;;;;7826:35;;;;;;;7756:20;;7826:35;;;;;;;;;;;;;7338:530;;;:::o;1765:187:10:-;1851:7;1886:12;1878:6;;;;1870:29;;;;-1:-1:-1;;;1870:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;1870:29:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1921:5:10;;;1765:187::o;893:176::-;951:7;982:5;;;1005:6;;;;997:46;;;;;-1:-1:-1;;;997:46:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;1061:1;893:176;-1:-1:-1;;;893:176:10:o;1912:593:12:-;2348:4;2456:17;2491:7;1912:593;:::o;2088:178:14:-;1472:13:12;;;;;;;;:33;;;1489:16;:14;:16::i;:::-;1472:50;;;-1:-1:-1;1510:12:12;;;;1509:13;1472:50;1464:109;;;;-1:-1:-1;;;1464:109:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:19;1607:13;;;;;;1606:14;1630:98;;;;1664:13;:20;;-1:-1:-1;;;;1664:20:12;;;;;1698:19;1680:4;1698:19;;;1630:98;2185:26:14::1;:24;:26::i;:::-;2221:38;2244:5;2251:7;2221:22;:38::i;:::-;1754:14:12::0;1750:66;;;1800:5;1784:21;;-1:-1:-1;;1784:21:12;;;1750:66;2088:178:14;;;:::o;661:153:13:-;1472:13:12;;;;;;;;:33;;;1489:16;:14;:16::i;:::-;1472:50;;;-1:-1:-1;1510:12:12;;;;1509:13;1472:50;1464:109;;;;-1:-1:-1;;;1464:109:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:19;1607:13;;;;;;1606:14;1630:98;;;;1664:13;:20;;-1:-1:-1;;;;1664:20:12;;;;;1698:19;1680:4;1698:19;;;1630:98;759:1:13::1;752:4;:8;744:42;;;::::0;;-1:-1:-1;;;744:42:13;;::::1;;::::0;::::1;::::0;::::1;::::0;;;;::::1;::::0;;;;;;;;;;;;;::::1;;796:4;:11:::0;;;1750:66:12;;;;1800:5;1784:21;;-1:-1:-1;;1784:21:12;;;1750:66;661:153:13;;:::o;8139:370:14:-;-1:-1:-1;;;;;8222:21:14;;8214:65;;;;;-1:-1:-1;;;8214:65:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;8290:49;8319:1;8323:7;8332:6;8290:20;:49::i;:::-;8365:12;;:24;;8382:6;8365:24;:16;:24;:::i;:::-;8350:12;:39;-1:-1:-1;;;;;8420:18:14;;;;;;:9;:18;;;;;;:30;;8443:6;8420:30;:22;:30;:::i;:::-;-1:-1:-1;;;;;8399:18:14;;;;;;:9;:18;;;;;;;;:51;;;;8465:37;;;;;;;8399:18;;;;8465:37;;;;;;;;;;8139:370;;:::o;1144:312:13:-;1252:44;1279:4;1285:2;1289:6;1252:26;:44::i;:::-;-1:-1:-1;;;;;1311:18:13;;1307:143;;1405:4;;1376:25;1394:6;1376:13;:11;:13::i;:::-;:17;:25;:17;:25;:::i;:::-;:33;;1368:71;;;;;-1:-1:-1;;;1368:71:13;;;;;;;;;;;;;;;;;;;;;;;;;;;759:64:8;1472:13:12;;;;;;;;:33;;;1489:16;:14;:16::i;:::-;1472:50;;;-1:-1:-1;1510:12:12;;;;1509:13;1472:50;1464:109;;;;-1:-1:-1;;;1464:109:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:19;1607:13;;;;;;1606:14;1630:98;;;;1664:13;:20;;-1:-1:-1;;;;1664:20:12;;;;;1698:19;1680:4;1698:19;;;1630:98;1754:14;1750:66;;;1800:5;1784:21;;-1:-1:-1;;1784:21:12;;;1750:66;759:64:8;:::o;2272:178:14:-;1472:13:12;;;;;;;;:33;;;1489:16;:14;:16::i;:::-;1472:50;;;-1:-1:-1;1510:12:12;;;;1509:13;1472:50;1464:109;;;;-1:-1:-1;;;1464:109:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1584:19;1607:13;;;;;;1606:14;1630:98;;;;1664:13;:20;;-1:-1:-1;;;;1664:20:12;;;;;1698:19;1680:4;1698:19;;;1630:98;2379:13:14;;::::1;::::0;:5:::1;::::0;:13:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2402:17:14;;::::1;::::0;:7:::1;::::0;:17:::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;2429:9:14::1;:14:::0;;-1:-1:-1;;2429:14:14::1;2441:2;2429:14;::::0;;1750:66:12;;;;1800:5;1784:21;;-1:-1:-1;;1784:21:12;;;2272:178:14;;;:::o;110:506:1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;110:506:1;;;-1:-1:-1;110:506:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;",
  "source": "pragma solidity 0.6.6;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/ERC20CappedUpgradeable.sol\";\n\ncontract EglToken is Initializable, ContextUpgradeable, ERC20CappedUpgradeable {\n    function initialize(\n        address initialRecipient, \n        string memory name, \n        string memory symbol, \n        uint256 initialSupply\n    ) \n        public \n        initializer \n    {\n        require(initialRecipient != address(0), \"EGLTOKEN:INVALID_RECIPIENT\");\n\n        __ERC20_init(name, symbol);\n        __ERC20Capped_init_unchained(initialSupply);\n\n        _mint(initialRecipient, initialSupply);\n    }\n}\n",
  "sourcePath": "/Users/svancoller/Development/bloXroute/egl/contracts/EglToken.sol",
  "ast": {
    "absolutePath": "/Users/svancoller/Development/bloXroute/egl/contracts/EglToken.sol",
    "exportedSymbols": {
      "EglToken": [
        3176
      ]
    },
    "id": 3177,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3130,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20CappedUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20CappedUpgradeable.sol",
        "id": 3131,
        "nodeType": "ImportDirective",
        "scope": 3177,
        "sourceUnit": 4419,
        "src": "24:84:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3132,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4316,
              "src": "131:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4316",
                "typeString": "contract Initializable"
              }
            },
            "id": 3133,
            "nodeType": "InheritanceSpecifier",
            "src": "131:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3134,
              "name": "ContextUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3742,
              "src": "146:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContextUpgradeable_$3742",
                "typeString": "contract ContextUpgradeable"
              }
            },
            "id": 3135,
            "nodeType": "InheritanceSpecifier",
            "src": "146:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3136,
              "name": "ERC20CappedUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4418,
              "src": "166:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20CappedUpgradeable_$4418",
                "typeString": "contract ERC20CappedUpgradeable"
              }
            },
            "id": 3137,
            "nodeType": "InheritanceSpecifier",
            "src": "166:22:1"
          }
        ],
        "contractDependencies": [
          3742,
          4316,
          4418,
          4948,
          5026
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3176,
        "linearizedBaseContracts": [
          3176,
          4418,
          4948,
          5026,
          3742,
          4316
        ],
        "name": "EglToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3174,
              "nodeType": "Block",
              "src": "389:225:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3151,
                          "name": "initialRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3139,
                          "src": "407:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "435:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "427:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3152,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "427:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "427:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "407:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45474c544f4b454e3a494e56414c49445f524543495049454e54",
                        "id": 3157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "439:28:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77247aaeb609bf1803b21dee0c3cb900c0e20f78520f5209f2d13d208996893c",
                          "typeString": "literal_string \"EGLTOKEN:INVALID_RECIPIENT\""
                        },
                        "value": "EGLTOKEN:INVALID_RECIPIENT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77247aaeb609bf1803b21dee0c3cb900c0e20f78520f5209f2d13d208996893c",
                          "typeString": "literal_string \"EGLTOKEN:INVALID_RECIPIENT\""
                        }
                      ],
                      "id": 3150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "399:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3159,
                  "nodeType": "ExpressionStatement",
                  "src": "399:69:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3161,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3141,
                        "src": "492:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3162,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3143,
                        "src": "498:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3160,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4471,
                      "src": "479:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 3163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "479:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3164,
                  "nodeType": "ExpressionStatement",
                  "src": "479:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3166,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3145,
                        "src": "544:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3165,
                      "name": "__ERC20Capped_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4365,
                      "src": "515:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "515:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3168,
                  "nodeType": "ExpressionStatement",
                  "src": "515:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3170,
                        "name": "initialRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3139,
                        "src": "575:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3171,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3145,
                        "src": "593:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3169,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4820,
                      "src": "569:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3173,
                  "nodeType": "ExpressionStatement",
                  "src": "569:38:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4d12d4b6",
            "id": 3175,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3148,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3147,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4293,
                  "src": "372:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "372:11:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3139,
                  "mutability": "mutable",
                  "name": "initialRecipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3175,
                  "src": "224:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3141,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3175,
                  "src": "259:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3143,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3175,
                  "src": "288:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "288:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3145,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3175,
                  "src": "319:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "214:132:1"
            },
            "returnParameters": {
              "id": 3149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "389:0:1"
            },
            "scope": 3176,
            "src": "195:419:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3177,
        "src": "110:506:1"
      }
    ],
    "src": "0:617:1"
  },
  "legacyAST": {
    "absolutePath": "/Users/svancoller/Development/bloXroute/egl/contracts/EglToken.sol",
    "exportedSymbols": {
      "EglToken": [
        3176
      ]
    },
    "id": 3177,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 3130,
        "literals": [
          "solidity",
          "0.6",
          ".6"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:22:1"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20CappedUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/token/ERC20/ERC20CappedUpgradeable.sol",
        "id": 3131,
        "nodeType": "ImportDirective",
        "scope": 3177,
        "sourceUnit": 4419,
        "src": "24:84:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3132,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4316,
              "src": "131:13:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4316",
                "typeString": "contract Initializable"
              }
            },
            "id": 3133,
            "nodeType": "InheritanceSpecifier",
            "src": "131:13:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3134,
              "name": "ContextUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3742,
              "src": "146:18:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ContextUpgradeable_$3742",
                "typeString": "contract ContextUpgradeable"
              }
            },
            "id": 3135,
            "nodeType": "InheritanceSpecifier",
            "src": "146:18:1"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 3136,
              "name": "ERC20CappedUpgradeable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4418,
              "src": "166:22:1",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20CappedUpgradeable_$4418",
                "typeString": "contract ERC20CappedUpgradeable"
              }
            },
            "id": 3137,
            "nodeType": "InheritanceSpecifier",
            "src": "166:22:1"
          }
        ],
        "contractDependencies": [
          3742,
          4316,
          4418,
          4948,
          5026
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 3176,
        "linearizedBaseContracts": [
          3176,
          4418,
          4948,
          5026,
          3742,
          4316
        ],
        "name": "EglToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 3174,
              "nodeType": "Block",
              "src": "389:225:1",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 3156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 3151,
                          "name": "initialRecipient",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3139,
                          "src": "407:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 3154,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "435:1:1",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 3153,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "427:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 3152,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "427:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": null,
                                "typeString": null
                              }
                            }
                          },
                          "id": 3155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "427:10:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "407:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45474c544f4b454e3a494e56414c49445f524543495049454e54",
                        "id": 3157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "439:28:1",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_77247aaeb609bf1803b21dee0c3cb900c0e20f78520f5209f2d13d208996893c",
                          "typeString": "literal_string \"EGLTOKEN:INVALID_RECIPIENT\""
                        },
                        "value": "EGLTOKEN:INVALID_RECIPIENT"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_77247aaeb609bf1803b21dee0c3cb900c0e20f78520f5209f2d13d208996893c",
                          "typeString": "literal_string \"EGLTOKEN:INVALID_RECIPIENT\""
                        }
                      ],
                      "id": 3150,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "399:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 3158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "399:69:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3159,
                  "nodeType": "ExpressionStatement",
                  "src": "399:69:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3161,
                        "name": "name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3141,
                        "src": "492:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3162,
                        "name": "symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3143,
                        "src": "498:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "id": 3160,
                      "name": "__ERC20_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4471,
                      "src": "479:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory)"
                      }
                    },
                    "id": 3163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "479:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3164,
                  "nodeType": "ExpressionStatement",
                  "src": "479:26:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3166,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3145,
                        "src": "544:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3165,
                      "name": "__ERC20Capped_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4365,
                      "src": "515:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 3167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "515:43:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3168,
                  "nodeType": "ExpressionStatement",
                  "src": "515:43:1"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 3170,
                        "name": "initialRecipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3139,
                        "src": "575:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 3171,
                        "name": "initialSupply",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3145,
                        "src": "593:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 3169,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4820,
                      "src": "569:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 3172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "569:38:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 3173,
                  "nodeType": "ExpressionStatement",
                  "src": "569:38:1"
                }
              ]
            },
            "documentation": null,
            "functionSelector": "4d12d4b6",
            "id": 3175,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 3148,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 3147,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4293,
                  "src": "372:11:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "372:11:1"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "overrides": null,
            "parameters": {
              "id": 3146,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 3139,
                  "mutability": "mutable",
                  "name": "initialRecipient",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3175,
                  "src": "224:24:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 3138,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "224:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3141,
                  "mutability": "mutable",
                  "name": "name",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3175,
                  "src": "259:18:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "259:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3143,
                  "mutability": "mutable",
                  "name": "symbol",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3175,
                  "src": "288:20:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 3142,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "288:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 3145,
                  "mutability": "mutable",
                  "name": "initialSupply",
                  "nodeType": "VariableDeclaration",
                  "overrides": null,
                  "scope": 3175,
                  "src": "319:21:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 3144,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "319:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "214:132:1"
            },
            "returnParameters": {
              "id": 3149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "389:0:1"
            },
            "scope": 3176,
            "src": "195:419:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 3177,
        "src": "110:506:1"
      }
    ],
    "src": "0:617:1"
  },
  "compiler": {
    "name": "solc",
    "version": "0.6.6+commit.6c089d02.Emscripten.clang"
  },
  "networks": {
    "1": {
      "events": {
        "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Approval",
          "type": "event"
        },
        "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef": {
          "anonymous": false,
          "inputs": [
            {
              "indexed": true,
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "indexed": true,
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "indexed": false,
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            }
          ],
          "name": "Transfer",
          "type": "event"
        }
      },
      "links": {},
      "address": "0x1e83916Ea2EF2D7a6064775662E163b2D4C330a7",
      "transactionHash": "0x17475ce8ea6ce99e12e4bbaaec9a21a1d9fe29dfe3cecc08ee7bbc8731771904"
    }
  },
  "schemaVersion": "3.2.5",
  "updatedAt": "2021-08-13T15:15:46.718Z",
  "networkType": "ethereum",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`).     * Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless {_setupDecimals} is called.     * NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller.     * This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}.     * Emits an {Approval} event indicating the updated allowance.     * Requirements:     * - `spender` cannot be the zero address."
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}.     * Requirements:     * - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}.     * Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}.     * Requirements:     * - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}